{
  "description": "ResourceGraphDefinition is the Schema for the resourcegraphdefinitions API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ResourceGraphDefinitionSpec defines the desired state of ResourceGraphDefinition",
      "properties": {
        "resources": {
          "description": "The resources that are part of the resourcegraphdefinition.",
          "items": {
            "properties": {
              "externalRef": {
                "description": "ExternalRef is a reference to an external resource.\nIt allows the user to specify the Kind, Version, Name and Namespace of the resource\nto be read and used in the Graph.",
                "properties": {
                  "apiVersion": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "metadata": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "apiVersion",
                  "kind",
                  "metadata"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "id": {
                "type": "string"
              },
              "includeWhen": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "readyWhen": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "template": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              }
            },
            "required": [
              "id"
            ],
            "type": "object",
            "x-kubernetes-validations": [
              {
                "message": "exactly one of template or externalRef must be provided",
                "rule": "(has(self.template) && !has(self.externalRef)) || (!has(self.template) && has(self.externalRef))"
              }
            ],
            "additionalProperties": false
          },
          "type": "array"
        },
        "schema": {
          "description": "The schema of the resourcegraphdefinition, which includes the\napiVersion, kind, spec, status, types, and some validation\nrules.",
          "properties": {
            "additionalPrinterColumns": {
              "description": "AdditionalPrinterColumns defines additional printer columns\nthat will be passed down to the created CRD. If set, no\ndefault printer columns will be added to the created CRD,\nand if default printer columns need to be retained, they\nneed to be added explicitly.",
              "items": {
                "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
                "properties": {
                  "description": {
                    "description": "description is a human readable description of this column.",
                    "type": "string"
                  },
                  "format": {
                    "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied\nto the primary identifier column to assist in clients identifying column is the resource name.\nSee https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                    "type": "string"
                  },
                  "jsonPath": {
                    "description": "jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against\neach custom resource to produce the value for this column.",
                    "type": "string"
                  },
                  "name": {
                    "description": "name is a human readable name for the column.",
                    "type": "string"
                  },
                  "priority": {
                    "description": "priority is an integer defining the relative importance of this column compared to others. Lower\nnumbers are considered higher priority. Columns that may be omitted in limited space scenarios\nshould be given a priority greater than 0.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": {
                    "description": "type is an OpenAPI type definition for this column.\nSee https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                    "type": "string"
                  }
                },
                "required": [
                  "jsonPath",
                  "name",
                  "type"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "apiVersion": {
              "description": "The APIVersion of the resourcegraphdefinition. This is used to generate\nand create the CRD for the resourcegraphdefinition.",
              "pattern": "^v[0-9]+(alpha[0-9]+|beta[0-9]+)?$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "apiVersion is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "group": {
              "default": "kro.run",
              "description": "The group of the resourcegraphdefinition. This is used to set the API group\nof the generated CRD. If omitted, it defaults to \"kro.run\".",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the resourcegraphdefinition. This is used to generate\nand create the CRD for the resourcegraphdefinition.",
              "pattern": "^[A-Z][a-zA-Z0-9]{0,62}$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "kind is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "spec": {
              "description": "The spec of the resourcegraphdefinition. Typically, this is the spec of\nthe CRD that the resourcegraphdefinition is managing. This is adhering\nto the SimpleSchema spec",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "status": {
              "description": "The status of the resourcegraphdefinition. This is the status of the CRD\nthat the resourcegraphdefinition is managing. This is adhering to the\nSimpleSchema spec.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "types": {
              "description": "Types is a map of custom type definitions. These can be used in the spec\nof the resourcegraphdefinition. Each type definition is also adhering to\nthe SimpleSchema spec.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "validation": {
              "description": "Validation is a list of validation rules that are applied to the\nresourcegraphdefinition.",
              "items": {
                "properties": {
                  "expression": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "apiVersion",
            "kind"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "schema"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ResourceGraphDefinitionStatus defines the observed state of ResourceGraphDefinition",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human-readable message indicating details about the transition.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "resources": {
          "description": "Resources represents the resources, and their information (dependencies for now)",
          "items": {
            "description": "ResourceInformation defines the information about a resource\nin the resourcegraphdefinition",
            "properties": {
              "dependencies": {
                "description": "Dependencies represents the resource dependencies of a resource graph definition",
                "items": {
                  "description": "Dependency defines the dependency a resource has observed\nfrom the resources it points to based on expressions",
                  "properties": {
                    "id": {
                      "description": "ID represents the id of the dependency resource",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "id": {
                "description": "ID represents the id of the resources we're providing information for",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "state": {
          "description": "State is the state of the resourcegraphdefinition",
          "type": "string"
        },
        "topologicalOrder": {
          "description": "TopologicalOrder is the topological order of the resourcegraphdefinition graph",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object",
  "additionalProperties": false
}